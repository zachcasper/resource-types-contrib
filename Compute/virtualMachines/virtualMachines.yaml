namespace: Radius.Compute
types:
  virtualMachines:
    description: |
      The Radius.Compute/virtualMachines Resource Type deploys a VM. It is always part of a Radius Application. To deploy a VM, add a virtualMachines resource to the application definition Bicep file.

      ```
      extension radius
      param environment string 

      resource myApplication 'Radius.Core/applications@2025-08-01-preview' = { ... }

      resource myVM 'Radius.Compute/containers@2025-08-01-preview' = {
        name: 'myVM'
        properties: {
          environment: environment
          application: myApplication.id
          cpu: '2'
          operatingSystem: 'Linux'
        }
      }
      ```

      In order to access the VM, create a Secret resource to store the SSH key or Windows Administrator password. Then reference this Secret when creating the VM.

      ```
      extension radius
      param environment string 

      resource myApplication 'Radius.Core/applications@2025-08-01-preview' = { ... }

      resource myVM 'Radius.Compute/containers@2025-08-01-preview' = {
        name: 'myVM'
        properties: {
          environment: environment
          application: myApplication.id
          cpu: '2'
          operatingSystem: 'Windows'
          windowsAdminPassword: 
            secretKeyRef: 
              secretId: passwordSecret.id
              key: 'adminPassword'
        }
      }

      @secure()
      param adminPassword string

      resource passwordSecret 'Radius.Security/secrets@2025-08-01-preview' = {
        name: 'passwordSecret'
        properties: {
          environment: environment
          application: myApplication.id
          data:
            adminPassword:
              value: adminPassword
        }
      }
      ```

      You can run a script on boot by storing the script in a BlobStorageBucket then referencing the script.

      ```
      extension radius
      param environment string 

      resource myApplication 'Radius.Core/applications@2025-08-01-preview' = { ... }

      resource myVM 'Radius.Compute/containers@2025-08-01-preview' = {
        name: 'myVM'
        properties: {
          environment: environment
          application: myApplication.id
          cpu: '2'
          operatingSystem: 'Windows'
          startupScript:
            blobStorageBucket:
              resourceId: startupScriptBucket.id
              scriptPath: '/script/myStartupScript.ps1'
        }
      }

      resource startupScriptBucket 'Radius.Storage/blobStorageBucket@2025-08-01-preview' = {
        name: 'startupScriptBucket'
        properties: { ... }
      }
      ```

    apiVersions:
      '2023-10-01-preview':
        schema: 
          type: object
          properties:
            environment:
              type: string
              description: (Required) The Radius Environment ID. Typically set by the rad CLI. Typically value should be `environment`.
            application:
              type: string
              description: (Required) The Radius Application ID. `myApplication.id` for example.
            connections:
              type: object
              description: '(Optional) Map of resources this container is dependent upon. `db: { source: db.id } for example.'
              additionalProperties:
                type: object
                properties:
                  source:
                    type: string
                    description: (Required) The resource ID of the resource this container is dependent upon.
                  disableDefaultEnvVars:
                    type: boolean
                    description: (Optional) Disables the automatic injection of environment variables from connected resource properties.
                required: [source]
            kind: 
              type: string
              enum: [Burst, Standard, ComputeOptimized, MemoryOptimized]
              description: (Optional) The type of virtual machine. `Burst` VMs have shared CPUs with a 2:1 memory to CPU ratio. `Standard` VMs have non-shared CPU with a 2:1 memory to CPU ratio. `ComputeOptimized` have the same ratio but higher performance CPUs. `MemoryOptimized` have a 4:1 memory to CPU ratio with standard CPUs. If not specified, `Burst` is assumed.
            cpu:
              type: string
              enum: [1, 2, 4, 8, 16, 32]
              description: (Optional) The number of vCPUs required by the container. If not specified, `1` is assumed.
            memoryInMib:
              type: integer
              description: (Optional) The amount of memory provided to the VM. Must conform to CPU:memory ratios defined by the kind. See kind description. 
            operatingSystem:
              type: string
              enum: [Linux, Windows]
              description: (Required) The operating system to install on the VM. 
            publiclyAccessible:
              type: boolean
              description: (Optional) Defines whether the VM has a public IP address or not. If not set, assumed to be false.
            sshKey:
              type: object
              description: (Optional) The SSH key for the root user on Linux. Either the sshKey or the windowsAdminPassword must be specified.
              properties:
                secretKeyRef:
                  type: object
                  description: (Optional) The Radius Secret resource used to store the SSH key.
                  properties:
                    secretId:
                      type: string
                      description: (Required) The ID of the Radius Secrets resource.
                    key:
                      type: string
                      description: (Required) The key of the Radius Secrets resource. 
                  required: [secretId, key]
            windowsAdminPassword:
              type: object
              description: (Optional) The password used for the administrator user on Windows. Either the sshKey or the windowsAdminPassword must be specified.
              properties:
                secretKeyRef:
                  type: object
                  description: (Optional) The Radius Secret resource used to store the password.
                  properties:
                    secretId:
                      type: string
                      description: (Required) The ID of the Radius Secrets resource.
                    key:
                      type: string
                      description: (Required) The key of the Radius Secrets resource. 
                  required: [secretId, key]
            startupScript:
              type: object
              description: (Optional) A start up script to execute on boot.
              properties:
                blobStorageBucket:
                  type: object
                  description: (Required) The Radius BlobStorageBucket resource used to store the startup script.
                  properties:
                    resourceId:
                      type: string
                      description: (Required) The ID of the Radius BlobStorageBucket.
                    scriptPath:
                      type: string
                      description: (Required) The fully qualified path of the startup script within the BlobStorageBucket.
                  required: [resourceId, scriptPath]
              required: [blobStorageBucket]
            publicIpAddress:
              type: string
              description:  (Read-only) The public IP address of the virtaul machine, if exists.
              readOnly: true
            privateIpAddress:
              type: string
              description:  (Read-only) The private IP address of the virtaul machine.
              readOnly: true
            fqdn:
              type: string
              description: (Read-only) The fully-qualified domain name of the virtual machine.
              readOnly: true
          required: [environment, application, cpu, operatingSystem]